[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START MapObjectDefaultInstanceParam class]]--
MapObjectDefaultInstanceParam = BaseParamClass:new()

function MapObjectDefaultInstanceParam:new(uuid, id, address)
	local o = {}
	self.__index = self
	setmetatable(o, self)

	o:init("MapObjectDefaultInstanceParam", uuid, id, address)
	return o
end

function MapObjectDefaultInstanceParam:paramId(value)
	self:patch4Byte(0x0, value)
end


function MapObjectDefaultInstanceParam:unk04(value)
	self:patch4Byte(0x4, value)
end


function MapObjectDefaultInstanceParam:unk08(value)
	self:patch4Byte(0x8, value)
end


function MapObjectDefaultInstanceParam:unk0C(value)
	self:patchFloat(0xC, value)
end


function MapObjectDefaultInstanceParam:unk10(value)
	self:patchFloat(0x10, value)
end


function MapObjectDefaultInstanceParam:mapObjectInstanceTypeId(value)
	self:patch4Byte(0x14, value)
end


function MapObjectDefaultInstanceParam:unk18(value)
	self:patch2Byte(0x18, value)
end


function MapObjectDefaultInstanceParam:unk1A(value)
	self:patchByte(0x1A, value)
end


function MapObjectDefaultInstanceParam:unk1A2(value)
	self:patchByte(0x1B, value)
end


function MapObjectDefaultInstanceParam:unk1C(value)
	self:patchByte(0x1C, value)
end


function MapObjectDefaultInstanceParam:unk1D(value)
	self:patchByte(0x1D, value)
end


function MapObjectDefaultInstanceParam:defaultState(value)
	self:patchByte(0x1E, value)
end


function MapObjectDefaultInstanceParam:unk1F(value)
	self:patchByte(0x1F, value)
end


function MapObjectDefaultInstanceParam:unk20(value)
	self:patch4Byte(0x20, value)
end


function MapObjectDefaultInstanceParam:itemlotId(value)
	self:patch4Byte(0x24, value)
end


--[[End MapObjectDefaultInstanceParam class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

