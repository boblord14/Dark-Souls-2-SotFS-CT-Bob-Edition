[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START CameraBattleParam class]]--
CameraBattleParam = BaseParamClass:new()

function CameraBattleParam:new(uuid, id, address)
	local o = {}
	self.__index = self
	setmetatable(o, self)

	o:init("CameraBattleParam", uuid, id, address)
	return o
end

function CameraBattleParam:unk00(value)
	self:patch4Byte(0x0, value)
end


function CameraBattleParam:unk04(value)
	self:patchFloat(0x4, value)
end


function CameraBattleParam:unk08(value)
	self:patchFloat(0x8, value)
end


function CameraBattleParam:unk0C(value)
	self:patchFloat(0xC, value)
end


function CameraBattleParam:unk10(value)
	self:patchFloat(0x10, value)
end


function CameraBattleParam:unk14(value)
	self:patchFloat(0x14, value)
end


function CameraBattleParam:unk18(value)
	self:patchFloat(0x18, value)
end


function CameraBattleParam:unk1C(value)
	self:patchFloat(0x1C, value)
end


function CameraBattleParam:unk20(value)
	self:patchFloat(0x20, value)
end


function CameraBattleParam:unk24(value)
	self:patchFloat(0x24, value)
end


function CameraBattleParam:unk28(value)
	self:patchFloat(0x28, value)
end


function CameraBattleParam:unk2C(value)
	self:patchFloat(0x2C, value)
end


function CameraBattleParam:unk30(value)
	self:patchFloat(0x30, value)
end


function CameraBattleParam:unk34(value)
	self:patchFloat(0x34, value)
end


function CameraBattleParam:unk38(value)
	self:patchFloat(0x38, value)
end


function CameraBattleParam:unk3C(value)
	self:patchFloat(0x3C, value)
end


function CameraBattleParam:unk40(value)
	self:patchFloat(0x40, value)
end


function CameraBattleParam:unk44(value)
	self:patchFloat(0x44, value)
end


function CameraBattleParam:unk48(value)
	self:patchFloat(0x48, value)
end


function CameraBattleParam:unk4C(value)
	self:patchFloat(0x4C, value)
end


function CameraBattleParam:unk50(value)
	self:patchFloat(0x50, value)
end


function CameraBattleParam:unk54(value)
	self:patchFloat(0x54, value)
end


function CameraBattleParam:unk58(value)
	self:patchFloat(0x58, value)
end


function CameraBattleParam:unk5C(value)
	self:patchFloat(0x5C, value)
end


function CameraBattleParam:unk60(value)
	self:patchFloat(0x60, value)
end


function CameraBattleParam:unk64(value)
	self:patchFloat(0x64, value)
end


function CameraBattleParam:unk68(value)
	self:patchFloat(0x68, value)
end


function CameraBattleParam:unk6C(value)
	self:patchFloat(0x6C, value)
end


function CameraBattleParam:unk70(value)
	self:patchFloat(0x70, value)
end


function CameraBattleParam:unk74(value)
	self:patchFloat(0x74, value)
end


function CameraBattleParam:unk78(value)
	self:patchFloat(0x78, value)
end


function CameraBattleParam:unk7C(value)
	self:patchFloat(0x7C, value)
end


function CameraBattleParam:unk80(value)
	self:patchFloat(0x80, value)
end


function CameraBattleParam:unk84(value)
	self:patchFloat(0x84, value)
end


function CameraBattleParam:unk88(value)
	self:patchFloat(0x88, value)
end


function CameraBattleParam:unk8C(value)
	self:patchFloat(0x8C, value)
end


function CameraBattleParam:unk90(value)
	self:patchFloat(0x90, value)
end


function CameraBattleParam:unk94(value)
	self:patchFloat(0x94, value)
end


function CameraBattleParam:unk98(value)
	self:patchFloat(0x98, value)
end


function CameraBattleParam:unk9C(value)
	self:patchFloat(0x9C, value)
end


function CameraBattleParam:unka0(value)
	self:patchFloat(0xA0, value)
end


function CameraBattleParam:unka4(value)
	self:patchFloat(0xA4, value)
end


function CameraBattleParam:unka8(value)
	self:patchFloat(0xA8, value)
end


function CameraBattleParam:unkac(value)
	self:patchFloat(0xAC, value)
end


function CameraBattleParam:unkb0(value)
	self:patchFloat(0xB0, value)
end


function CameraBattleParam:unkb4(value)
	self:patchFloat(0xB4, value)
end


function CameraBattleParam:unkb8(value)
	self:patchFloat(0xB8, value)
end


function CameraBattleParam:unkbc(value)
	self:patchFloat(0xBC, value)
end


function CameraBattleParam:unkc0(value)
	self:patchFloat(0xC0, value)
end


function CameraBattleParam:unkc4(value)
	self:patchFloat(0xC4, value)
end


function CameraBattleParam:unkc8(value)
	self:patchFloat(0xC8, value)
end


function CameraBattleParam:unkcc(value)
	self:patchFloat(0xCC, value)
end


function CameraBattleParam:unkd0(value)
	self:patchFloat(0xD0, value)
end


function CameraBattleParam:unkd4(value)
	self:patchFloat(0xD4, value)
end


function CameraBattleParam:unkd8(value)
	self:patchFloat(0xD8, value)
end


function CameraBattleParam:unkdc(value)
	self:patchFloat(0xDC, value)
end


function CameraBattleParam:unke0(value)
	self:patchFloat(0xE0, value)
end


function CameraBattleParam:unke4(value)
	self:patchFloat(0xE4, value)
end


function CameraBattleParam:unke8(value)
	self:patchFloat(0xE8, value)
end


function CameraBattleParam:unkec(value)
	self:patchFloat(0xEC, value)
end


function CameraBattleParam:unkf0(value)
	self:patchFloat(0xF0, value)
end


function CameraBattleParam:unkf4(value)
	self:patchFloat(0xF4, value)
end


function CameraBattleParam:unkf8(value)
	self:patchFloat(0xF8, value)
end


function CameraBattleParam:unkfc(value)
	self:patchFloat(0xFC, value)
end


function CameraBattleParam:unk100(value)
	self:patchFloat(0x100, value)
end


function CameraBattleParam:unk104(value)
	self:patchFloat(0x104, value)
end


function CameraBattleParam:unk108(value)
	self:patchFloat(0x108, value)
end


function CameraBattleParam:unk10C(value)
	self:patchFloat(0x10C, value)
end


function CameraBattleParam:unk110(value)
	self:patchFloat(0x110, value)
end


function CameraBattleParam:unk114(value)
	self:patchFloat(0x114, value)
end


--[[End CameraBattleParam class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

