[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START WeaponReinforceParam class]]--
WeaponReinforceParam = BaseParamClass:new()

function WeaponReinforceParam:new(uuid, id, address)
	local o = {}
	self.__index = self
	setmetatable(o, self)

	o:init("WeaponReinforceParam", uuid, id, address)
	return o
end

function WeaponReinforceParam:damagePhysical(value)
	self:patchFloat(0x0, value)
end


function WeaponReinforceParam:damageMagic(value)
	self:patchFloat(0x4, value)
end


function WeaponReinforceParam:damageLightning(value)
	self:patchFloat(0x8, value)
end


function WeaponReinforceParam:damageFire(value)
	self:patchFloat(0xC, value)
end


function WeaponReinforceParam:damageDark(value)
	self:patchFloat(0x10, value)
end


function WeaponReinforceParam:damagePoisonFloat5(value)
	self:patchFloat(0x14, value)
end


function WeaponReinforceParam:damageBleedFloat5(value)
	self:patchFloat(0x18, value)
end


function WeaponReinforceParam:damagePetrifyFloat5(value)
	self:patchFloat(0x1C, value)
end


function WeaponReinforceParam:damageCurseFloat5(value)
	self:patchFloat(0x20, value)
end


function WeaponReinforceParam:maxDamagePhysical(value)
	self:patchFloat(0x24, value)
end


function WeaponReinforceParam:maxDamageMagic(value)
	self:patchFloat(0x28, value)
end


function WeaponReinforceParam:maxDamageLightning(value)
	self:patchFloat(0x2C, value)
end


function WeaponReinforceParam:maxDamageFire(value)
	self:patchFloat(0x30, value)
end


function WeaponReinforceParam:maxDamageDark(value)
	self:patchFloat(0x34, value)
end


function WeaponReinforceParam:maxDamagePoisonFloat5(value)
	self:patchFloat(0x38, value)
end


function WeaponReinforceParam:maxDamageBleedFloat5(value)
	self:patchFloat(0x3C, value)
end


function WeaponReinforceParam:maxDamagePetrifyFloat5(value)
	self:patchFloat(0x40, value)
end


function WeaponReinforceParam:maxDamageCurseFloat5(value)
	self:patchFloat(0x44, value)
end


function WeaponReinforceParam:maxReinforcementLevel(value)
	self:patch4Byte(0x48, value)
end


function WeaponReinforceParam:weaponStatsAffectId(value)
	self:patch4Byte(0x4C, value)
end


function WeaponReinforceParam:absorptionPhysical(value)
	self:patchFloat(0x50, value)
end


function WeaponReinforceParam:absorptionMagic(value)
	self:patchFloat(0x54, value)
end


function WeaponReinforceParam:absorptionFire(value)
	self:patchFloat(0x58, value)
end


function WeaponReinforceParam:absorptionLightning(value)
	self:patchFloat(0x5C, value)
end


function WeaponReinforceParam:absorptionDark(value)
	self:patchFloat(0x60, value)
end


function WeaponReinforceParam:resistancePoison(value)
	self:patchFloat(0x64, value)
end


function WeaponReinforceParam:resistanceBleed(value)
	self:patchFloat(0x68, value)
end


function WeaponReinforceParam:resistancePetrify(value)
	self:patchFloat(0x6C, value)
end


function WeaponReinforceParam:resistanceCurse(value)
	self:patchFloat(0x70, value)
end


function WeaponReinforceParam:stability0(value)
	self:patchFloat(0x74, value)
end


function WeaponReinforceParam:stability1(value)
	self:patchFloat(0x78, value)
end


function WeaponReinforceParam:stability2(value)
	self:patchFloat(0x7C, value)
end


function WeaponReinforceParam:stability3(value)
	self:patchFloat(0x80, value)
end


function WeaponReinforceParam:stability4(value)
	self:patchFloat(0x84, value)
end


function WeaponReinforceParam:stability5(value)
	self:patchFloat(0x88, value)
end


function WeaponReinforceParam:stability6(value)
	self:patchFloat(0x8C, value)
end


function WeaponReinforceParam:stability7(value)
	self:patchFloat(0x90, value)
end


function WeaponReinforceParam:stability8(value)
	self:patchFloat(0x94, value)
end


function WeaponReinforceParam:stability9(value)
	self:patchFloat(0x98, value)
end


function WeaponReinforceParam:stability10(value)
	self:patchFloat(0x9C, value)
end


function WeaponReinforceParam:damagePhysical2(value)
	self:patchFloat(0xA0, value)
end


function WeaponReinforceParam:damageMagic2(value)
	self:patchFloat(0xA4, value)
end


function WeaponReinforceParam:damageLightning2(value)
	self:patchFloat(0xA8, value)
end


function WeaponReinforceParam:damageFire2(value)
	self:patchFloat(0xAC, value)
end


function WeaponReinforceParam:damageDark2(value)
	self:patchFloat(0xB0, value)
end


function WeaponReinforceParam:damagePoison(value)
	self:patchFloat(0xB4, value)
end


function WeaponReinforceParam:damageBleed(value)
	self:patchFloat(0xB8, value)
end


function WeaponReinforceParam:damagePetrify(value)
	self:patchFloat(0xBC, value)
end


function WeaponReinforceParam:damageCurse(value)
	self:patchFloat(0xC0, value)
end


function WeaponReinforceParam:infusionModifierMagic(value)
	self:patchFloat(0xC4, value)
end


function WeaponReinforceParam:infusionModifierLightning(value)
	self:patchFloat(0xC8, value)
end


function WeaponReinforceParam:infusionModifierFire(value)
	self:patchFloat(0xCC, value)
end


function WeaponReinforceParam:infusionModifierDark(value)
	self:patchFloat(0xD0, value)
end


function WeaponReinforceParam:infusionModifierPoison(value)
	self:patchFloat(0xD4, value)
end


function WeaponReinforceParam:infusionModifierBleed(value)
	self:patchFloat(0xD8, value)
end


function WeaponReinforceParam:infusionModifierRaw(value)
	self:patchFloat(0xDC, value)
end


function WeaponReinforceParam:infusionModifierEnchanted(value)
	self:patchFloat(0xE0, value)
end


function WeaponReinforceParam:infusionModifierMundane(value)
	self:patchFloat(0xE4, value)
end


function WeaponReinforceParam:customattrspecparamId(value)
	self:patch4Byte(0xE8, value)
end


function WeaponReinforceParam:customattrcostparamId(value)
	self:patch4Byte(0xEC, value)
end


function WeaponReinforceParam:reinforceCostId(value)
	self:patch4Byte(0xF0, value)
end


--[[End WeaponReinforceParam class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

