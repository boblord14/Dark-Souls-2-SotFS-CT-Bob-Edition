[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START WeaponTypeParam class]]--
WeaponTypeParam = BaseParamClass:new()

function WeaponTypeParam:new(uuid, id, address)
	local o = {}
	self.__index = self
	setmetatable(o, self)

	o:init("WeaponTypeParam", uuid, id, address)
	return o
end

function WeaponTypeParam:iscastsorceries(value)
	self:patchByte(0x0, value)
end


function WeaponTypeParam:iscastmiracles(value)
	self:patchByte(0x1, value)
end


function WeaponTypeParam:iscastpyromancies(value)
	self:patchByte(0x2, value)
end


function WeaponTypeParam:iscaststaveshex(value)
	self:patchByte(0x3, value)
end


function WeaponTypeParam:unk04(value)
	self:patch4Byte(0x4, value)
end


function WeaponTypeParam:unk08(value)
	self:patch4Byte(0x8, value)
end


function WeaponTypeParam:right2HGripStyle(value)
	self:patch4Byte(0xC, value)
end


function WeaponTypeParam:left2HGripStyle(value)
	self:patch4Byte(0x10, value)
end


function WeaponTypeParam:right1HGripStyle(value)
	self:patch4Byte(0x14, value)
end


function WeaponTypeParam:left1HGripStyle(value)
	self:patch4Byte(0x18, value)
end


function WeaponTypeParam:rightPowerstanceGripStyle(value)
	self:patch4Byte(0x1C, value)
end


function WeaponTypeParam:leftPowerstanceGripStyle(value)
	self:patch4Byte(0x20, value)
end


function WeaponTypeParam:stanceSwapType(value)
	self:patchByte(0x24, value)
end


function WeaponTypeParam:right1HPosition(value)
	self:patchByte(0x25, value)
end


function WeaponTypeParam:right1HRelativePosition(value)
	self:patchByte(0x26, value)
end


function WeaponTypeParam:left1HPosition(value)
	self:patchByte(0x27, value)
end


function WeaponTypeParam:left1HRelativePosition(value)
	self:patchByte(0x28, value)
end


function WeaponTypeParam:right2HPosition(value)
	self:patchByte(0x29, value)
end


function WeaponTypeParam:right2HRelativePosition(value)
	self:patchByte(0x2A, value)
end


function WeaponTypeParam:unk2B(value)
	self:patchByte(0x2B, value)
end


function WeaponTypeParam:unk2C(value)
	self:patchByte(0x2C, value)
end


function WeaponTypeParam:left2HPosition(value)
	self:patchByte(0x2D, value)
end


function WeaponTypeParam:left2HRelativePosition(value)
	self:patchByte(0x2E, value)
end


function WeaponTypeParam:unk2F(value)
	self:patchByte(0x2F, value)
end


function WeaponTypeParam:unk30(value)
	self:patchByte(0x30, value)
end


function WeaponTypeParam:rightHolsteredPosition(value)
	self:patchByte(0x31, value)
end


function WeaponTypeParam:rightHolsteredRelativePosition(value)
	self:patchByte(0x32, value)
end


function WeaponTypeParam:leftHolsteredPosition(value)
	self:patchByte(0x33, value)
end


function WeaponTypeParam:leftHolsteredRelativePosition(value)
	self:patchByte(0x34, value)
end


function WeaponTypeParam:castType(value)
	self:patchByte(0x35, value)
end


function WeaponTypeParam:weaponCategoryName(value)
	self:patchByte(0x36, value)
end


function WeaponTypeParam:swingSound(value)
	self:patchByte(0x37, value)
end


function WeaponTypeParam:dualwieldpermissionparamId(value)
	self:patch4Byte(0x38, value)
end


function WeaponTypeParam:unk3C(value)
	self:patchFloat(0x3C, value)
end


function WeaponTypeParam:unk40(value)
	self:patchFloat(0x40, value)
end


function WeaponTypeParam:unk44(value)
	self:patchFloat(0x44, value)
end


function WeaponTypeParam:unk48(value)
	self:patchFloat(0x48, value)
end


function WeaponTypeParam:unk4C(value)
	self:patchFloat(0x4C, value)
end


function WeaponTypeParam:unk50(value)
	self:patchByte(0x50, value)
end


function WeaponTypeParam:unk51(value)
	self:patchByte(0x51, value)
end


function WeaponTypeParam:unk52(value)
	self:patchByte(0x52, value)
end


function WeaponTypeParam:iscastchimehex(value)
	self:patchByte(0x53, value)
end


function WeaponTypeParam:leftHandedDamageReductionRate(value)
	self:patchFloat(0x54, value)
end


function WeaponTypeParam:unk58(value)
	self:patchFloat(0x58, value)
end


function WeaponTypeParam:unk5C(value)
	self:patchFloat(0x5C, value)
end


function WeaponTypeParam:rightHandedDamageReductionRate(value)
	self:patchFloat(0x60, value)
end


function WeaponTypeParam:unk64(value)
	self:patchFloat(0x64, value)
end


function WeaponTypeParam:unk68(value)
	self:patchFloat(0x68, value)
end


function WeaponTypeParam:unk6C(value)
	self:patchFloat(0x6C, value)
end


function WeaponTypeParam:unk70(value)
	self:patchFloat(0x70, value)
end


function WeaponTypeParam:unk74(value)
	self:patchFloat(0x74, value)
end


function WeaponTypeParam:unk78(value)
	self:patchFloat(0x78, value)
end


function WeaponTypeParam:unk7C(value)
	self:patchFloat(0x7C, value)
end


function WeaponTypeParam:unk80(value)
	self:patchFloat(0x80, value)
end


function WeaponTypeParam:unk84(value)
	self:patchFloat(0x84, value)
end


function WeaponTypeParam:unk88(value)
	self:patchFloat(0x88, value)
end


function WeaponTypeParam:unk8C(value)
	self:patchFloat(0x8C, value)
end


function WeaponTypeParam:unk90(value)
	self:patchFloat(0x90, value)
end


function WeaponTypeParam:unk94(value)
	self:patchFloat(0x94, value)
end


function WeaponTypeParam:unk98(value)
	self:patchFloat(0x98, value)
end


function WeaponTypeParam:unk9C(value)
	self:patchFloat(0x9C, value)
end


function WeaponTypeParam:unka0(value)
	self:patchByte(0xA0, value)
end


function WeaponTypeParam:unka02(value)
	self:patchByte(0xA1, value)
end


function WeaponTypeParam:unka03(value)
	self:patchByte(0xA2, value)
end


function WeaponTypeParam:unka04(value)
	self:patchByte(0xA3, value)
end


function WeaponTypeParam:backstabCheckAnimationId(value)
	self:patch4Byte(0xA4, value)
end


function WeaponTypeParam:guardBreakCheckAnimationId(value)
	self:patch4Byte(0xA8, value)
end


function WeaponTypeParam:unkac(value)
	self:patchFloat(0xAC, value)
end


function WeaponTypeParam:unkb0(value)
	self:patchFloat(0xB0, value)
end


function WeaponTypeParam:unkb4(value)
	self:patchFloat(0xB4, value)
end


function WeaponTypeParam:unkb8(value)
	self:patchFloat(0xB8, value)
end


function WeaponTypeParam:unkbc(value)
	self:patchFloat(0xBC, value)
end


function WeaponTypeParam:unkc0(value)
	self:patchFloat(0xC0, value)
end


function WeaponTypeParam:unkc4(value)
	self:patchFloat(0xC4, value)
end


function WeaponTypeParam:unkc8(value)
	self:patchFloat(0xC8, value)
end


function WeaponTypeParam:unkcc(value)
	self:patchFloat(0xCC, value)
end


function WeaponTypeParam:unkd0(value)
	self:patchFloat(0xD0, value)
end


function WeaponTypeParam:unkd4(value)
	self:patchFloat(0xD4, value)
end


function WeaponTypeParam:unkd8(value)
	self:patchFloat(0xD8, value)
end


function WeaponTypeParam:unkdc(value)
	self:patchFloat(0xDC, value)
end


function WeaponTypeParam:unke0(value)
	self:patchFloat(0xE0, value)
end


function WeaponTypeParam:unke4(value)
	self:patchFloat(0xE4, value)
end


function WeaponTypeParam:unke8(value)
	self:patchFloat(0xE8, value)
end


function WeaponTypeParam:unkec(value)
	self:patchFloat(0xEC, value)
end


function WeaponTypeParam:unkf0(value)
	self:patchFloat(0xF0, value)
end


function WeaponTypeParam:unkf4(value)
	self:patchFloat(0xF4, value)
end


function WeaponTypeParam:unkf8(value)
	self:patchFloat(0xF8, value)
end


function WeaponTypeParam:unkfc(value)
	self:patchFloat(0xFC, value)
end


function WeaponTypeParam:unk100(value)
	self:patch4Byte(0x100, value)
end


function WeaponTypeParam:unk104(value)
	self:patchFloat(0x104, value)
end


function WeaponTypeParam:unk108(value)
	self:patchFloat(0x108, value)
end


function WeaponTypeParam:unk10C(value)
	self:patchFloat(0x10C, value)
end


function WeaponTypeParam:unk110(value)
	self:patchFloat(0x110, value)
end


function WeaponTypeParam:unk114(value)
	self:patchFloat(0x114, value)
end


function WeaponTypeParam:unk118(value)
	self:patchFloat(0x118, value)
end


function WeaponTypeParam:unk11C(value)
	self:patchFloat(0x11C, value)
end


function WeaponTypeParam:unk120(value)
	self:patchFloat(0x120, value)
end


function WeaponTypeParam:unk124(value)
	self:patchFloat(0x124, value)
end


function WeaponTypeParam:unk128(value)
	self:patchFloat(0x128, value)
end


function WeaponTypeParam:unk12C(value)
	self:patchFloat(0x12C, value)
end


function WeaponTypeParam:unk130(value)
	self:patch4Byte(0x130, value)
end


function WeaponTypeParam:unk134(value)
	self:patch4Byte(0x134, value)
end


function WeaponTypeParam:unk138(value)
	self:patchByte(0x138, value)
end


function WeaponTypeParam:unk139(value)
	self:patchByte(0x139, value)
end


function WeaponTypeParam:mundaneScaling(value)
	self:patchByte(0x13A, value)
end


function WeaponTypeParam:unk13B(value)
	self:patchByte(0x13B, value)
end


--[[End WeaponTypeParam class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

