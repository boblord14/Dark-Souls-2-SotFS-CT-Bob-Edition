[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START MapObjectBonfireParam class]]--
MapObjectBonfireParam = BaseParamClass:new()

function MapObjectBonfireParam:new(uuid, id, address)
	local o = {}
	self.__index = self
	setmetatable(o, self)

	o:init("MapObjectBonfireParam", uuid, id, address)
	return o
end

function MapObjectBonfireParam:areaId(value)
	self:patch4Byte(0x0, value)
end


function MapObjectBonfireParam:unk04(value)
	self:patch4Byte(0x4, value)
end


function MapObjectBonfireParam:unk08(value)
	self:patchFloat(0x8, value)
end


function MapObjectBonfireParam:unk0C(value)
	self:patchFloat(0xC, value)
end


function MapObjectBonfireParam:unk10(value)
	self:patch4Byte(0x10, value)
end


function MapObjectBonfireParam:unk14(value)
	self:patchFloat(0x14, value)
end


function MapObjectBonfireParam:unk18(value)
	self:patchFloat(0x18, value)
end


function MapObjectBonfireParam:fogDoorId(value)
	self:patch4Byte(0x1C, value)
end


function MapObjectBonfireParam:unk20(value)
	self:patchByte(0x20, value)
end


function MapObjectBonfireParam:unk21(value)
	self:patchByte(0x21, value)
end


function MapObjectBonfireParam:unk22(value)
	self:patchByte(0x22, value)
end


function MapObjectBonfireParam:unk23(value)
	self:patchByte(0x23, value)
end


function MapObjectBonfireParam:bonfireLitFlagId(value)
	self:patch4Byte(0x24, value)
end


function MapObjectBonfireParam:unk28(value)
	self:patch4Byte(0x28, value)
end


function MapObjectBonfireParam:unk2C(value)
	self:patch4Byte(0x2C, value)
end


--[[End MapObjectBonfireParam class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

