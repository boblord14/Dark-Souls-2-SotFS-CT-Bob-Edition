[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START SystemDamageParam class]]--
SystemDamageParam = BaseParamClass:new()

function SystemDamageParam:new(uuid, id, address)
	local o = {}
	self.__index = self
	setmetatable(o, self)

	o:init("SystemDamageParam", uuid, id, address)
	return o
end

function SystemDamageParam:damageControlId(value)
	self:patch4Byte(0x0, value)
end


function SystemDamageParam:damageIdFollowUp(value)
	self:patch4Byte(0x4, value)
end


function SystemDamageParam:damageIdOrigin(value)
	self:patch4Byte(0x8, value)
end


function SystemDamageParam:damage0(value)
	self:patch4Byte(0xC, value)
end


function SystemDamageParam:damage1(value)
	self:patch4Byte(0x10, value)
end


function SystemDamageParam:damage2(value)
	self:patch4Byte(0x14, value)
end


function SystemDamageParam:unk18(value)
	self:patchByte(0x18, value)
end


function SystemDamageParam:damageType0(value)
	self:patchByte(0x19, value)
end


function SystemDamageParam:damageType1(value)
	self:patchByte(0x1A, value)
end


function SystemDamageParam:damageType2(value)
	self:patchByte(0x1B, value)
end


function SystemDamageParam:damageMultiplier(value)
	self:patchFloat(0x1C, value)
end


function SystemDamageParam:unk20(value)
	self:patchFloat(0x20, value)
end


function SystemDamageParam:unk24(value)
	self:patchByte(0x24, value)
end


function SystemDamageParam:unk25(value)
	self:patchByte(0x25, value)
end


function SystemDamageParam:unk26(value)
	self:patchByte(0x26, value)
end


function SystemDamageParam:unk27(value)
	self:patchByte(0x27, value)
end


function SystemDamageParam:knockbackAmount(value)
	self:patchFloat(0x28, value)
end


function SystemDamageParam:knockbackSpeed(value)
	self:patchFloat(0x2C, value)
end


function SystemDamageParam:isspawnonweapon(value)
	self:patchByte(0x30, value)
end


function SystemDamageParam:hitboxOriginDmypolyId(value)
	self:patchByte(0x31, value)
end


function SystemDamageParam:guardBreakRelated(value)
	self:patchByte(0x32, value)
end


function SystemDamageParam:hitboxShape(value)
	self:patchByte(0x33, value)
end


function SystemDamageParam:hitboxRadiusMultiplier(value)
	self:patchFloat(0x34, value)
end


function SystemDamageParam:hitboxLenghtMultiplier(value)
	self:patchFloat(0x38, value)
end


function SystemDamageParam:cyclePeriod(value)
	self:patchFloat(0x3C, value)
end


function SystemDamageParam:target(value)
	self:patchByte(0x40, value)
end


function SystemDamageParam:unk41(value)
	self:patchByte(0x41, value)
end


function SystemDamageParam:unk42(value)
	self:patchByte(0x42, value)
end


function SystemDamageParam:unk43(value)
	self:patchByte(0x43, value)
end


function SystemDamageParam:unk44(value)
	self:patchByte(0x44, value)
end


function SystemDamageParam:unk45(value)
	self:patchByte(0x45, value)
end


function SystemDamageParam:unk46(value)
	self:patchByte(0x46, value)
end


function SystemDamageParam:unk47(value)
	self:patchByte(0x47, value)
end


function SystemDamageParam:speffectId(value)
	self:patch4Byte(0x48, value)
end


function SystemDamageParam:isapplyspeffect(value)
	self:patchByte(0x4C, value)
end


function SystemDamageParam:speffectType(value)
	self:patchByte(0x4D, value)
end


function SystemDamageParam:applyMode(value)
	self:patchByte(0x4E, value)
end


function SystemDamageParam:unk4F(value)
	self:patchByte(0x4F, value)
end


function SystemDamageParam:unk50(value)
	self:patch4Byte(0x50, value)
end


function SystemDamageParam:unk54(value)
	self:patch4Byte(0x54, value)
end


function SystemDamageParam:unk58(value)
	self:patch4Byte(0x58, value)
end


function SystemDamageParam:unk5C(value)
	self:patchByte(0x5C, value)
end


function SystemDamageParam:unk5D(value)
	self:patchByte(0x5D, value)
end


function SystemDamageParam:unk5E(value)
	self:patchByte(0x5E, value)
end


function SystemDamageParam:unk5F(value)
	self:patchByte(0x5F, value)
end


function SystemDamageParam:unk60(value)
	self:patchByte(0x60, value)
end


function SystemDamageParam:unk61(value)
	self:patchByte(0x61, value)
end


function SystemDamageParam:unk62(value)
	self:patchByte(0x62, value)
end


function SystemDamageParam:hitbackHitboxOriginDummypolyId(value)
	self:patchByte(0x63, value)
end


function SystemDamageParam:hitbackHitboxShape(value)
	self:patchByte(0x64, value)
end


function SystemDamageParam:unk65(value)
	self:patchByte(0x65, value)
end


function SystemDamageParam:unk66(value)
	self:patchByte(0x66, value)
end


function SystemDamageParam:unk67(value)
	self:patchByte(0x67, value)
end


function SystemDamageParam:hitbackHitboxRadiusMultiplier(value)
	self:patchFloat(0x68, value)
end


function SystemDamageParam:hitbackHitboxLenghtMultiplier(value)
	self:patchFloat(0x6C, value)
end


function SystemDamageParam:grabParamId(value)
	self:patch4Byte(0x70, value)
end


function SystemDamageParam:hitboxMaxSize(value)
	self:patchFloat(0x74, value)
end


function SystemDamageParam:hitboxExpansionSpeed(value)
	self:patchFloat(0x78, value)
end


--[[End SystemDamageParam class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

