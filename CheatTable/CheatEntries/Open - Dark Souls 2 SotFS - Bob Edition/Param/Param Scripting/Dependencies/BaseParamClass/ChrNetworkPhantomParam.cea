[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START ChrNetworkPhantomParam class]]--
ChrNetworkPhantomParam = BaseParamClass:new()

function ChrNetworkPhantomParam:new(uuid, id, address)
	local o = {}
	self.__index = self
	setmetatable(o, self)

	o:init("ChrNetworkPhantomParam", uuid, id, address)
	return o
end

function ChrNetworkPhantomParam:chrphantomparamIdPhantomColor(value)
	self:patch4Byte(0x0, value)
end


function ChrNetworkPhantomParam:fullyBodySfxId1(value)
	self:patch4Byte(0x4, value)
end


function ChrNetworkPhantomParam:fullyBodySfxId2(value)
	self:patch4Byte(0x8, value)
end


function ChrNetworkPhantomParam:fullyBodySfxId3(value)
	self:patch4Byte(0xC, value)
end


function ChrNetworkPhantomParam:fullyBodySfxId4(value)
	self:patch4Byte(0x10, value)
end


function ChrNetworkPhantomParam:unk14(value)
	self:patchByte(0x14, value)
end


function ChrNetworkPhantomParam:unk15(value)
	self:patchByte(0x15, value)
end


function ChrNetworkPhantomParam:unk16(value)
	self:patchByte(0x16, value)
end


function ChrNetworkPhantomParam:unk17(value)
	self:patchByte(0x17, value)
end


function ChrNetworkPhantomParam:physicsTextureId(value)
	self:patch4Byte(0x18, value)
end


function ChrNetworkPhantomParam:unk1C(value)
	self:patchFloat(0x1C, value)
end


function ChrNetworkPhantomParam:deadTypeId(value)
	self:patch4Byte(0x20, value)
end


function ChrNetworkPhantomParam:allotedTime(value)
	self:patchFloat(0x24, value)
end


function ChrNetworkPhantomParam:unk28(value)
	self:patchFloat(0x28, value)
end


function ChrNetworkPhantomParam:unk2C(value)
	self:patch4Byte(0x2C, value)
end


function ChrNetworkPhantomParam:unk30(value)
	self:patch4Byte(0x30, value)
end


function ChrNetworkPhantomParam:probablyRelatedToMessageBox(value)
	self:patch4Byte(0x34, value)
end


function ChrNetworkPhantomParam:unk38(value)
	self:patchFloat(0x38, value)
end


function ChrNetworkPhantomParam:unk3C(value)
	self:patch4Byte(0x3C, value)
end


function ChrNetworkPhantomParam:probablyRelatedToMessageBox2(value)
	self:patch4Byte(0x40, value)
end


function ChrNetworkPhantomParam:unk44(value)
	self:patchFloat(0x44, value)
end


function ChrNetworkPhantomParam:unk48(value)
	self:patchFloat(0x48, value)
end


function ChrNetworkPhantomParam:unk4C(value)
	self:patchFloat(0x4C, value)
end


function ChrNetworkPhantomParam:unk50(value)
	self:patch4Byte(0x50, value)
end


function ChrNetworkPhantomParam:unk54(value)
	self:patch4Byte(0x54, value)
end


function ChrNetworkPhantomParam:unk58(value)
	self:patch4Byte(0x58, value)
end


function ChrNetworkPhantomParam:unk5C(value)
	self:patchFloat(0x5C, value)
end


--[[End ChrNetworkPhantomParam class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

