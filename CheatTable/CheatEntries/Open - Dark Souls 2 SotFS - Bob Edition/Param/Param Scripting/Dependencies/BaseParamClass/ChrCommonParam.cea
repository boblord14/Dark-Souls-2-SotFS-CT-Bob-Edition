[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START ChrCommonParam class]]--
ChrCommonParam = BaseParamClass:new()

function ChrCommonParam:new(uuid, id, address)
	local o = {}
	self.__index = self
	setmetatable(o, self)

	o:init("ChrCommonParam", uuid, id, address)
	return o
end

function ChrCommonParam:chrSize(value)
	self:patch4Byte(0x0, value)
end


function ChrCommonParam:unk04(value)
	self:patch4Byte(0x4, value)
end


function ChrCommonParam:unk08(value)
	self:patchFloat(0x8, value)
end


function ChrCommonParam:unk0C(value)
	self:patchFloat(0xC, value)
end


function ChrCommonParam:outOfStaminaStateDuration(value)
	self:patchFloat(0x10, value)
end


function ChrCommonParam:runningStaminaMultiplier(value)
	self:patchFloat(0x14, value)
end


function ChrCommonParam:unk18(value)
	self:patchFloat(0x18, value)
end


function ChrCommonParam:ladderSprintStaminaMultiplier(value)
	self:patchFloat(0x1C, value)
end


function ChrCommonParam:unk20(value)
	self:patchFloat(0x20, value)
end


function ChrCommonParam:baseActionStaminaConsumption10(value)
	self:patchFloat(0x24, value)
end


function ChrCommonParam:backstepStaminaConsumptionMultiplier(value)
	self:patchFloat(0x28, value)
end


function ChrCommonParam:rollStaminaConsumptionMultiplier(value)
	self:patchFloat(0x2C, value)
end


function ChrCommonParam:jumpStaminaConsumptionMultiplier(value)
	self:patchFloat(0x30, value)
end


function ChrCommonParam:unk34(value)
	self:patchFloat(0x34, value)
end


function ChrCommonParam:multipleRollStaminaConsumptionMultiplier(value)
	self:patchFloat(0x38, value)
end


function ChrCommonParam:unk3C(value)
	self:patchFloat(0x3C, value)
end


function ChrCommonParam:unk40(value)
	self:patchFloat(0x40, value)
end


function ChrCommonParam:unk44(value)
	self:patchFloat(0x44, value)
end


function ChrCommonParam:unk48(value)
	self:patchFloat(0x48, value)
end


function ChrCommonParam:unk4C(value)
	self:patchFloat(0x4C, value)
end


function ChrCommonParam:unk50(value)
	self:patchFloat(0x50, value)
end


function ChrCommonParam:unk54(value)
	self:patchFloat(0x54, value)
end


function ChrCommonParam:unk58(value)
	self:patchFloat(0x58, value)
end


function ChrCommonParam:unk5C(value)
	self:patchFloat(0x5C, value)
end


function ChrCommonParam:unk60(value)
	self:patchFloat(0x60, value)
end


function ChrCommonParam:unk64(value)
	self:patchFloat(0x64, value)
end


function ChrCommonParam:unk68(value)
	self:patchFloat(0x68, value)
end


function ChrCommonParam:unk6C(value)
	self:patchFloat(0x6C, value)
end


function ChrCommonParam:unk70(value)
	self:patch2Byte(0x70, value)
end


function ChrCommonParam:unk72(value)
	self:patch2Byte(0x72, value)
end


function ChrCommonParam:unk74(value)
	self:patchFloat(0x74, value)
end


function ChrCommonParam:lowHpStateTresholdMax(value)
	self:patchFloat(0x78, value)
end


function ChrCommonParam:lowHpStateTresholdMin(value)
	self:patchFloat(0x7C, value)
end


function ChrCommonParam:unk80(value)
	self:patchFloat(0x80, value)
end


function ChrCommonParam:unk84(value)
	self:patchFloat(0x84, value)
end


function ChrCommonParam:unk88(value)
	self:patch4Byte(0x88, value)
end


function ChrCommonParam:colliderHeight(value)
	self:patchFloat(0x8C, value)
end


function ChrCommonParam:colliderRadius(value)
	self:patchFloat(0x90, value)
end


function ChrCommonParam:unk94(value)
	self:patchFloat(0x94, value)
end


function ChrCommonParam:blockAngle(value)
	self:patchFloat(0x98, value)
end


function ChrCommonParam:parryAngle(value)
	self:patchFloat(0x9C, value)
end


function ChrCommonParam:unka0(value)
	self:patchFloat(0xA0, value)
end


function ChrCommonParam:unka4(value)
	self:patchFloat(0xA4, value)
end


function ChrCommonParam:unka8(value)
	self:patchFloat(0xA8, value)
end


function ChrCommonParam:unkac(value)
	self:patchFloat(0xAC, value)
end


function ChrCommonParam:unkb0(value)
	self:patchFloat(0xB0, value)
end


function ChrCommonParam:unkb4(value)
	self:patchFloat(0xB4, value)
end


function ChrCommonParam:unkb8(value)
	self:patchFloat(0xB8, value)
end


function ChrCommonParam:unkbc(value)
	self:patchFloat(0xBC, value)
end


function ChrCommonParam:lockOnCameraOffsetId(value)
	self:patch4Byte(0xC0, value)
end


function ChrCommonParam:unkc4(value)
	self:patchFloat(0xC4, value)
end


function ChrCommonParam:unkc8(value)
	self:patchFloat(0xC8, value)
end


function ChrCommonParam:unkcc(value)
	self:patchFloat(0xCC, value)
end


function ChrCommonParam:unkd0(value)
	self:patchFloat(0xD0, value)
end


function ChrCommonParam:unkd4(value)
	self:patchFloat(0xD4, value)
end


function ChrCommonParam:unkd8(value)
	self:patchFloat(0xD8, value)
end


function ChrCommonParam:unkdc(value)
	self:patchFloat(0xDC, value)
end


function ChrCommonParam:unke0(value)
	self:patchFloat(0xE0, value)
end


function ChrCommonParam:unke4(value)
	self:patchFloat(0xE4, value)
end


function ChrCommonParam:unke8(value)
	self:patchFloat(0xE8, value)
end


function ChrCommonParam:unkec(value)
	self:patch4Byte(0xEC, value)
end


function ChrCommonParam:unkf0(value)
	self:patchFloat(0xF0, value)
end


function ChrCommonParam:unkf4(value)
	self:patchFloat(0xF4, value)
end


function ChrCommonParam:unkf8(value)
	self:patch4Byte(0xF8, value)
end


function ChrCommonParam:unkfc(value)
	self:patchFloat(0xFC, value)
end


function ChrCommonParam:backstabHitboxAngleXy(value)
	self:patchFloat(0x100, value)
end


function ChrCommonParam:backstabHitboxAngleZ(value)
	self:patchFloat(0x104, value)
end


function ChrCommonParam:backstabHitboxHeight(value)
	self:patchFloat(0x108, value)
end


function ChrCommonParam:backstabHitboxRadius(value)
	self:patchFloat(0x10C, value)
end


function ChrCommonParam:ripsoteHitboxAngleXy(value)
	self:patchFloat(0x110, value)
end


function ChrCommonParam:riposteHitboxAngleZ(value)
	self:patchFloat(0x114, value)
end


function ChrCommonParam:riposteHitboxHeight(value)
	self:patchFloat(0x118, value)
end


function ChrCommonParam:riposteHitboxRadius(value)
	self:patchFloat(0x11C, value)
end


function ChrCommonParam:guardBreakStabHitboxAngleXy(value)
	self:patchFloat(0x120, value)
end


function ChrCommonParam:guardBreakStabHitboxAngleZ(value)
	self:patchFloat(0x124, value)
end


function ChrCommonParam:guardBreakStabHitboxHeight(value)
	self:patchFloat(0x128, value)
end


function ChrCommonParam:guardBreakStabHitboxRadius(value)
	self:patchFloat(0x12C, value)
end


function ChrCommonParam:unk130(value)
	self:patch4Byte(0x130, value)
end


function ChrCommonParam:unk134(value)
	self:patchFloat(0x134, value)
end


function ChrCommonParam:unk138(value)
	self:patchFloat(0x138, value)
end


function ChrCommonParam:unk13C(value)
	self:patchFloat(0x13C, value)
end


function ChrCommonParam:unk140(value)
	self:patchFloat(0x140, value)
end


function ChrCommonParam:unk144(value)
	self:patchFloat(0x144, value)
end


function ChrCommonParam:unk148(value)
	self:patchFloat(0x148, value)
end


function ChrCommonParam:unk14C(value)
	self:patchFloat(0x14C, value)
end


function ChrCommonParam:unk150(value)
	self:patchFloat(0x150, value)
end


function ChrCommonParam:unk154(value)
	self:patchFloat(0x154, value)
end


function ChrCommonParam:unk158(value)
	self:patchFloat(0x158, value)
end


function ChrCommonParam:unk15C(value)
	self:patchFloat(0x15C, value)
end


function ChrCommonParam:unk160(value)
	self:patchFloat(0x160, value)
end


function ChrCommonParam:unk164(value)
	self:patchFloat(0x164, value)
end


function ChrCommonParam:unk168(value)
	self:patchFloat(0x168, value)
end


function ChrCommonParam:unk16C(value)
	self:patchFloat(0x16C, value)
end


function ChrCommonParam:unk170(value)
	self:patchFloat(0x170, value)
end


function ChrCommonParam:unk174(value)
	self:patchFloat(0x174, value)
end


function ChrCommonParam:unk178(value)
	self:patchFloat(0x178, value)
end


function ChrCommonParam:unk17C(value)
	self:patchFloat(0x17C, value)
end


function ChrCommonParam:unk180(value)
	self:patchFloat(0x180, value)
end


function ChrCommonParam:unk184(value)
	self:patchFloat(0x184, value)
end


function ChrCommonParam:unk188(value)
	self:patchFloat(0x188, value)
end


function ChrCommonParam:unk18C(value)
	self:patchFloat(0x18C, value)
end


function ChrCommonParam:unk190(value)
	self:patchFloat(0x190, value)
end


function ChrCommonParam:unk194(value)
	self:patchFloat(0x194, value)
end


function ChrCommonParam:unk198(value)
	self:patchFloat(0x198, value)
end


function ChrCommonParam:unk19C(value)
	self:patchFloat(0x19C, value)
end


function ChrCommonParam:unk1A0(value)
	self:patchFloat(0x1A0, value)
end


function ChrCommonParam:unk1A4(value)
	self:patch4Byte(0x1A4, value)
end


function ChrCommonParam:unk1A8(value)
	self:patchFloat(0x1A8, value)
end


function ChrCommonParam:unk1Ac(value)
	self:patchFloat(0x1AC, value)
end


function ChrCommonParam:unk1B0(value)
	self:patchFloat(0x1B0, value)
end


function ChrCommonParam:unk1B4(value)
	self:patchFloat(0x1B4, value)
end


function ChrCommonParam:unk1B8(value)
	self:patchFloat(0x1B8, value)
end


function ChrCommonParam:unk1Bc(value)
	self:patchFloat(0x1BC, value)
end


function ChrCommonParam:unk1C0(value)
	self:patchFloat(0x1C0, value)
end


function ChrCommonParam:unk1C4(value)
	self:patchFloat(0x1C4, value)
end


function ChrCommonParam:unk1C8(value)
	self:patchFloat(0x1C8, value)
end


function ChrCommonParam:unk1Cc(value)
	self:patchFloat(0x1CC, value)
end


function ChrCommonParam:unk1D0(value)
	self:patchFloat(0x1D0, value)
end


function ChrCommonParam:unk1D4(value)
	self:patchFloat(0x1D4, value)
end


function ChrCommonParam:unk1D8(value)
	self:patchFloat(0x1D8, value)
end


function ChrCommonParam:unk1Dc(value)
	self:patchFloat(0x1DC, value)
end


function ChrCommonParam:unk1E0(value)
	self:patchFloat(0x1E0, value)
end


function ChrCommonParam:unk1E4(value)
	self:patchFloat(0x1E4, value)
end


function ChrCommonParam:unk1E8(value)
	self:patchFloat(0x1E8, value)
end


function ChrCommonParam:unk1Ec(value)
	self:patchFloat(0x1EC, value)
end


function ChrCommonParam:unk1F0(value)
	self:patchFloat(0x1F0, value)
end


function ChrCommonParam:unk1F4(value)
	self:patchFloat(0x1F4, value)
end


function ChrCommonParam:unk1F8(value)
	self:patchFloat(0x1F8, value)
end


function ChrCommonParam:unk1Fc(value)
	self:patchFloat(0x1FC, value)
end


function ChrCommonParam:unk200(value)
	self:patchFloat(0x200, value)
end


function ChrCommonParam:unk204(value)
	self:patch4Byte(0x204, value)
end


function ChrCommonParam:unk208(value)
	self:patch4Byte(0x208, value)
end


function ChrCommonParam:unk20C(value)
	self:patchFloat(0x20C, value)
end


function ChrCommonParam:unk210(value)
	self:patchFloat(0x210, value)
end


function ChrCommonParam:unk214(value)
	self:patchFloat(0x214, value)
end


function ChrCommonParam:unk218(value)
	self:patchFloat(0x218, value)
end


function ChrCommonParam:unk21C(value)
	self:patchFloat(0x21C, value)
end


function ChrCommonParam:unk220(value)
	self:patchFloat(0x220, value)
end


function ChrCommonParam:unk224(value)
	self:patchFloat(0x224, value)
end


function ChrCommonParam:unk228(value)
	self:patchFloat(0x228, value)
end


function ChrCommonParam:unk22C(value)
	self:patch4Byte(0x22C, value)
end


function ChrCommonParam:unk230(value)
	self:patch4Byte(0x230, value)
end


function ChrCommonParam:unk234(value)
	self:patchFloat(0x234, value)
end


function ChrCommonParam:unk238(value)
	self:patchFloat(0x238, value)
end


function ChrCommonParam:unk23C(value)
	self:patchFloat(0x23C, value)
end


function ChrCommonParam:unk240(value)
	self:patchFloat(0x240, value)
end


function ChrCommonParam:unk244(value)
	self:patchFloat(0x244, value)
end


function ChrCommonParam:unk248(value)
	self:patchFloat(0x248, value)
end


function ChrCommonParam:unk24C(value)
	self:patchFloat(0x24C, value)
end


function ChrCommonParam:unk250(value)
	self:patchFloat(0x250, value)
end


function ChrCommonParam:relatedToBossStatus(value)
	self:patch4Byte(0x254, value)
end


function ChrCommonParam:unk258(value)
	self:patchFloat(0x258, value)
end


function ChrCommonParam:unk25C(value)
	self:patchFloat(0x25C, value)
end


function ChrCommonParam:unk260(value)
	self:patchFloat(0x260, value)
end


function ChrCommonParam:unk264(value)
	self:patchFloat(0x264, value)
end


function ChrCommonParam:unk268(value)
	self:patchFloat(0x268, value)
end


function ChrCommonParam:unk26C(value)
	self:patchFloat(0x26C, value)
end


function ChrCommonParam:slashAbsorption(value)
	self:patchFloat(0x270, value)
end


function ChrCommonParam:thrustAbsorption(value)
	self:patchFloat(0x274, value)
end


function ChrCommonParam:strikeAbsorption(value)
	self:patchFloat(0x278, value)
end


function ChrCommonParam:unk27C(value)
	self:patchFloat(0x27C, value)
end


function ChrCommonParam:unk280(value)
	self:patchFloat(0x280, value)
end


function ChrCommonParam:unk284(value)
	self:patch4Byte(0x284, value)
end


function ChrCommonParam:unk288(value)
	self:patchFloat(0x288, value)
end


function ChrCommonParam:unk28C(value)
	self:patchFloat(0x28C, value)
end


function ChrCommonParam:unk290(value)
	self:patchFloat(0x290, value)
end


function ChrCommonParam:unk294(value)
	self:patchFloat(0x294, value)
end


function ChrCommonParam:unk298(value)
	self:patch4Byte(0x298, value)
end


function ChrCommonParam:unk29C(value)
	self:patch4Byte(0x29C, value)
end


function ChrCommonParam:unk2A0(value)
	self:patch4Byte(0x2A0, value)
end


function ChrCommonParam:equipWeaponId(value)
	self:patch4Byte(0x2A4, value)
end


function ChrCommonParam:unk2A8(value)
	self:patchFloat(0x2A8, value)
end


function ChrCommonParam:unk2Ac(value)
	self:patchFloat(0x2AC, value)
end


function ChrCommonParam:unk2B0(value)
	self:patchFloat(0x2B0, value)
end


function ChrCommonParam:unk2B4(value)
	self:patchFloat(0x2B4, value)
end


function ChrCommonParam:unk2B8(value)
	self:patchFloat(0x2B8, value)
end


function ChrCommonParam:unk2Bc(value)
	self:patchFloat(0x2BC, value)
end


function ChrCommonParam:unk2C0(value)
	self:patchFloat(0x2C0, value)
end


function ChrCommonParam:unk2C4(value)
	self:patchFloat(0x2C4, value)
end


function ChrCommonParam:unk2C8(value)
	self:patchFloat(0x2C8, value)
end


function ChrCommonParam:unk2Cc(value)
	self:patchFloat(0x2CC, value)
end


function ChrCommonParam:unk2D0(value)
	self:patchFloat(0x2D0, value)
end


function ChrCommonParam:unk2D4(value)
	self:patchFloat(0x2D4, value)
end


function ChrCommonParam:unk2D8(value)
	self:patchFloat(0x2D8, value)
end


function ChrCommonParam:unk2Dc(value)
	self:patchFloat(0x2DC, value)
end


function ChrCommonParam:unk2E0(value)
	self:patchFloat(0x2E0, value)
end


function ChrCommonParam:unk2E4(value)
	self:patchFloat(0x2E4, value)
end


function ChrCommonParam:unk2E8(value)
	self:patchFloat(0x2E8, value)
end


function ChrCommonParam:unk2Ec(value)
	self:patchFloat(0x2EC, value)
end


function ChrCommonParam:unk2F0(value)
	self:patchFloat(0x2F0, value)
end


function ChrCommonParam:unk2F4(value)
	self:patchFloat(0x2F4, value)
end


function ChrCommonParam:unk2F8(value)
	self:patchFloat(0x2F8, value)
end


function ChrCommonParam:unk2Fc(value)
	self:patchFloat(0x2FC, value)
end


function ChrCommonParam:unk300(value)
	self:patchFloat(0x300, value)
end


function ChrCommonParam:unk304(value)
	self:patchFloat(0x304, value)
end


function ChrCommonParam:unk308(value)
	self:patchFloat(0x308, value)
end


function ChrCommonParam:unk30C(value)
	self:patchFloat(0x30C, value)
end


function ChrCommonParam:unk310(value)
	self:patchFloat(0x310, value)
end


function ChrCommonParam:unk314(value)
	self:patchFloat(0x314, value)
end


function ChrCommonParam:unk318(value)
	self:patchFloat(0x318, value)
end


function ChrCommonParam:unk31C(value)
	self:patch4Byte(0x31C, value)
end


function ChrCommonParam:unk320(value)
	self:patch4Byte(0x320, value)
end


function ChrCommonParam:unk324(value)
	self:patch4Byte(0x324, value)
end


function ChrCommonParam:unk328(value)
	self:patch4Byte(0x328, value)
end


function ChrCommonParam:unk32C(value)
	self:patch4Byte(0x32C, value)
end


function ChrCommonParam:unk330(value)
	self:patchFloat(0x330, value)
end


function ChrCommonParam:unk334(value)
	self:patchFloat(0x334, value)
end


function ChrCommonParam:unk338(value)
	self:patchFloat(0x338, value)
end


function ChrCommonParam:unk33C(value)
	self:patchFloat(0x33C, value)
end


function ChrCommonParam:unk340(value)
	self:patchFloat(0x340, value)
end


function ChrCommonParam:unk344(value)
	self:patchFloat(0x344, value)
end


function ChrCommonParam:unk348(value)
	self:patch4Byte(0x348, value)
end


function ChrCommonParam:criticalAbsorptionSlash(value)
	self:patchFloat(0x34C, value)
end


function ChrCommonParam:criticalAbsorptionThrust(value)
	self:patchFloat(0x350, value)
end


function ChrCommonParam:criticalAbsorptionStrike(value)
	self:patchFloat(0x354, value)
end


function ChrCommonParam:unk358(value)
	self:patchFloat(0x358, value)
end


function ChrCommonParam:unk35C(value)
	self:patchFloat(0x35C, value)
end


function ChrCommonParam:unk360(value)
	self:patchFloat(0x360, value)
end


function ChrCommonParam:unk364(value)
	self:patchFloat(0x364, value)
end


function ChrCommonParam:unk368(value)
	self:patchFloat(0x368, value)
end


function ChrCommonParam:unk36C(value)
	self:patchFloat(0x36C, value)
end


function ChrCommonParam:unk370(value)
	self:patchFloat(0x370, value)
end


function ChrCommonParam:unk374(value)
	self:patch4Byte(0x374, value)
end


function ChrCommonParam:rangedPhysicalAbsorption(value)
	self:patchFloat(0x378, value)
end


function ChrCommonParam:rangedMagicAbsorption(value)
	self:patchFloat(0x37C, value)
end


function ChrCommonParam:rangedLightningAbsorption(value)
	self:patchFloat(0x380, value)
end


function ChrCommonParam:rangedFireAbsorption(value)
	self:patchFloat(0x384, value)
end


function ChrCommonParam:rangedDarkAbsorption(value)
	self:patchFloat(0x388, value)
end


--[[End ChrCommonParam class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

